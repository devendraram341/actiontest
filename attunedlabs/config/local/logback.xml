<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<property name="LEAP_LOG" value="LEAP_SYSTEM_LOG"/>
	<property name="DEV_HOME" value="${user.dir}/../../logs"/>
	<property name="MAX_FILE_SIZE" value="1GB"/>
	<property name="MAX_HISTORY" value="10"/>
	<property name="TOTAL_SIZE" value="10GB"/>
	<!-- CONSOLE APPENDER -->
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%d{"yyyy-MM-dd'T'HH:mm:ss.SSS"} %X{system} [%thread] %-5level	%logger{36} [%M] - %replace(%msg){'${LEAP_LOG}', ''}%n</pattern>
		</encoder>
	</appender>
	<!-- TRACE APPENDER -->
	<appender name="Framework-FILE-TRACE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${DEV_HOME}/framework/Framework-trace.txt</file>
		<filter class="ch.qos.logback.core.filter.EvaluatorFilter">
			<evaluator>
				<expression>logger.contains("com.attunedlabs") &amp;&amp; level &lt; DEBUG &amp;&amp; formattedMessage.contains("${LEAP_LOG}")</expression>
			</evaluator>
			<OnMismatch>DENY</OnMismatch>
			<OnMatch>ACCEPT</OnMatch>
		</filter>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d{"yyyy-MM-dd'T'HH:mm:ss.SSS"} %X{system} [%thread] %-5level	%logger{36} [%M] - %replace(%msg){'${LEAP_LOG}', ''}%n</pattern>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<fileNamePattern>${DEV_HOME}/framework/Framework-trace-logs.%d{yyyy-MM-dd}.%i.txt</fileNamePattern>
			<maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
			<maxHistory>${MAX_HISTORY}</maxHistory>
			<totalSizeCap>${TOTAL_SIZE}</totalSizeCap>
		</rollingPolicy>
	</appender>
	<appender name="Framework-ASYNCTRACE" class="ch.qos.logback.classic.AsyncAppender">
		<includeCallerData>true</includeCallerData>
		<queueSize>500</queueSize>
		<discardingThreshold>2</discardingThreshold>
		<appender-ref ref="Framework-FILE-TRACE"/>
	</appender>
	<!-- DEBUG APPENDER -->
	<appender name="Framework-FILE-DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${DEV_HOME}/framework/Framework-debug.txt</file>
		<filter class="ch.qos.logback.core.filter.EvaluatorFilter">
			<evaluator>
				<expression>logger.contains("com.attunedlabs") &amp;&amp; level == DEBUG &amp;&amp; formattedMessage.contains("${LEAP_LOG}")</expression>
			</evaluator>
			<OnMismatch>DENY</OnMismatch>
			<OnMatch>ACCEPT</OnMatch>
		</filter>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d{"yyyy-MM-dd'T'HH:mm:ss.SSS"} %X{system} [%thread] %-5level	%logger{36} [%M] - %replace(%msg){'${LEAP_LOG}', ''}%n</pattern>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<fileNamePattern>${DEV_HOME}/framework/Framework-debug-logs.%d{yyyy-MM-dd}.%i.txt</fileNamePattern>
			<maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
			<maxHistory>${MAX_HISTORY}</maxHistory>
			<totalSizeCap>${TOTAL_SIZE}</totalSizeCap>
		</rollingPolicy>
	</appender>
	<appender name="Framework-ASYNCDEBUG" class="ch.qos.logback.classic.AsyncAppender">
		<includeCallerData>true</includeCallerData>
		<queueSize>500</queueSize>
		<discardingThreshold>2</discardingThreshold>
		<appender-ref ref="Framework-FILE-DEBUG"/>
	</appender>
	<!-- INFO APPENDER -->
	<appender name="Framework-FILE-INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${DEV_HOME}/framework/Framework-info.txt</file>
		<filter class="ch.qos.logback.core.filter.EvaluatorFilter">
			<evaluator>
				<!-- defaults to type ch.qos.logback.classic.boolex.JaninoEventEvaluator -->
				<expression>logger.contains("com.attunedlabs") &amp;&amp; level == INFO &amp;&amp; formattedMessage.contains("${LEAP_LOG}")</expression>
			</evaluator>
			<OnMismatch>DENY</OnMismatch>
			<OnMatch>ACCEPT</OnMatch>
		</filter>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d{"yyyy-MM-dd'T'HH:mm:ss.SSS"} %X{system} [%thread] %-5level	%logger{36} [%M] - %replace(%msg){'${LEAP_LOG}', ''}%n</pattern>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<fileNamePattern>${DEV_HOME}/framework/Framework-info-logs.%d{yyyy-MM-dd}.%i.txt</fileNamePattern>
			<maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
			<maxHistory>${MAX_HISTORY}</maxHistory>
			<totalSizeCap>${TOTAL_SIZE}</totalSizeCap>
		</rollingPolicy>
	</appender>
	<appender name="Framework-ASYNCINFO" class="ch.qos.logback.classic.AsyncAppender">
		<includeCallerData>true</includeCallerData>
		<queueSize>500</queueSize>
		<discardingThreshold>2</discardingThreshold>
		<appender-ref ref="Framework-FILE-INFO"/>
	</appender>
	<!-- ERROR APPENDER -->
	<appender name="Framework-FILE-ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${DEV_HOME}/framework/Framework-error.txt</file>
		<filter class="ch.qos.logback.core.filter.EvaluatorFilter">
			<evaluator>
				<!-- defaults to type ch.qos.logback.classic.boolex.JaninoEventEvaluator -->
				<expression>logger.contains("com.attunedlabs") &amp;&amp; level == ERROR &amp;&amp; formattedMessage.contains("${LEAP_LOG}")</expression>
			</evaluator>
			<OnMismatch>DENY</OnMismatch>
			<OnMatch>ACCEPT</OnMatch>
		</filter>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d{"yyyy-MM-dd'T'HH:mm:ss.SSS"} %X{system} [%thread] %-5level	%logger{36} [%M] - %replace(%msg){'${LEAP_LOG}', ''}%n</pattern>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<fileNamePattern>${DEV_HOME}/framework/Framework-error-logs.%d{yyyy-MM-dd}.%i.txt</fileNamePattern>
			<maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
			<maxHistory>${MAX_HISTORY}</maxHistory>
			<totalSizeCap>${TOTAL_SIZE}</totalSizeCap>
		</rollingPolicy>
	</appender>
	<appender name="Framework-ASYNCERROR" class="ch.qos.logback.classic.AsyncAppender">
		<includeCallerData>true</includeCallerData>
		<queueSize>500</queueSize>
		<discardingThreshold>2</discardingThreshold>
		<appender-ref ref="Framework-FILE-ERROR"/>
	</appender>
	<!-- DEBUG APPENDER -->
	<appender name="Application-FILE-DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${DEV_HOME}/application/Application-debug.txt</file>
		<filter class="ch.qos.logback.core.filter.EvaluatorFilter">
			<evaluator>
				<expression>!formattedMessage.contains("${LEAP_LOG}") &amp;&amp;!logger.contains("org.") &amp;&amp;!logger.contains("com.mchange") &amp;&amp;!logger.contains("com.rabbitmq") &amp;&amp; level == DEBUG</expression>
			</evaluator>
			<OnMismatch>DENY</OnMismatch>
			<OnMatch>ACCEPT</OnMatch>
		</filter>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d{"yyyy-MM-dd'T'HH:mm:ss.SSS"} %X{system} [%thread] %-5level	%logger{36} [%M] - %replace(%msg){'${LEAP_LOG}', ''}%n</pattern>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<fileNamePattern>${DEV_HOME}/application/Application-debug-logs.%d{yyyy-MM-dd}.%i.txt</fileNamePattern>
			<maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
			<maxHistory>${MAX_HISTORY}</maxHistory>
			<totalSizeCap>${TOTAL_SIZE}</totalSizeCap>
		</rollingPolicy>
	</appender>
	<appender name="Application-ASYNCDEBUG" class="ch.qos.logback.classic.AsyncAppender">
		<includeCallerData>true</includeCallerData>
		<queueSize>500</queueSize>
		<discardingThreshold>2</discardingThreshold>
		<appender-ref ref="Application-FILE-DEBUG"/>
	</appender>
	<!-- INFO APPENDER -->
	<appender name="Application-FILE-INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${DEV_HOME}/application/Application-info.txt</file>
		<filter class="ch.qos.logback.core.filter.EvaluatorFilter">
			<evaluator>
				<!-- defaults to type ch.qos.logback.classic.boolex.JaninoEventEvaluator -->
				<expression>!formattedMessage.contains("${LEAP_LOG}") &amp;&amp;!logger.contains("org.") &amp;&amp;!logger.contains("com.mchange") &amp;&amp;!logger.contains("com.rabbitmq") &amp;&amp; level == INFO</expression>
			</evaluator>
			<OnMismatch>DENY</OnMismatch>
			<OnMatch>ACCEPT</OnMatch>
		</filter>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d{"yyyy-MM-dd'T'HH:mm:ss.SSS"} %X{system} [%thread] %-5level	%logger{36} [%M] - %replace(%msg){'${LEAP_LOG}', ''}%n</pattern>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<fileNamePattern>${DEV_HOME}/application/Application-info-logs.%d{yyyy-MM-dd}.%i.txt</fileNamePattern>
			<maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
			<maxHistory>${MAX_HISTORY}</maxHistory>
			<totalSizeCap>${TOTAL_SIZE}</totalSizeCap>
		</rollingPolicy>
	</appender>
	<appender name="Application-ASYNCINFO" class="ch.qos.logback.classic.AsyncAppender">
		<includeCallerData>true</includeCallerData>
		<queueSize>500</queueSize>
		<discardingThreshold>2</discardingThreshold>
		<appender-ref ref="Application-FILE-INFO"/>
	</appender>
	<!-- ERROR APPENDER -->
	<appender name="Application-FILE-ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${DEV_HOME}/application/Application-error.txt</file>
		<filter class="ch.qos.logback.core.filter.EvaluatorFilter">
			<evaluator>
				<!-- defaults to type ch.qos.logback.classic.boolex.JaninoEventEvaluator -->
				<expression>!formattedMessage.contains("${LEAP_LOG}") &amp;&amp;!logger.contains("org.") &amp;&amp;!logger.contains("com.mchange") &amp;&amp;!logger.contains("com.rabbitmq") &amp;&amp; level == ERROR</expression>
			</evaluator>
			<OnMismatch>DENY</OnMismatch>
			<OnMatch>ACCEPT</OnMatch>
		</filter>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d{"yyyy-MM-dd'T'HH:mm:ss.SSS"} %X{system} [%thread] %-5level	%logger{36} [%M] - %replace(%msg){'${LEAP_LOG}', ''}%n</pattern>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<fileNamePattern>${DEV_HOME}/application/Application-error-logs.%d{yyyy-MM-dd}.%i.txt</fileNamePattern>
			<maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
			<maxHistory>${MAX_HISTORY}</maxHistory>
			<totalSizeCap>${TOTAL_SIZE}</totalSizeCap>
		</rollingPolicy>
	</appender>
	<appender name="Application-ASYNCERROR" class="ch.qos.logback.classic.AsyncAppender">
		<includeCallerData>true</includeCallerData>
		<queueSize>500</queueSize>
		<discardingThreshold>2</discardingThreshold>
		<appender-ref ref="Application-FILE-ERROR"/>
	</appender>
	<!-- Turning off c3p0 warning logs -->
	<logger name="com.mchange.v2.c3p0.SQLWarnings" level="OFF"/>
	<!-- Apache Camel Logs-->
	<logger name="org.apache.camel" level="INFO"/>
	<!-- DBCP Connection Pool Logs-->
	<logger name="com.mchange" level="INFO"/>
	<!-- Spring Framework Logs-->
	<logger name="org.springframework" level="INFO"/>
	<!-- Quartz Logs-->
	<logger name="org.quartz" level="INFO"/>
	<!-- Apache ActiveMQ Logs-->
	<logger name="org.apache.activemq" level="INFO"/>
	<!-- RabbitMQ Logs-->
	<logger name="com.rabbitmq" level="INFO"/>
	<!-- Apache Camel Logs-->
	<logger name="org.apache.metamodel" level="INFO"/>
	<!-- Leap Framework Logs-->
	<logger name="com.attunedlabs" level="TRACE"/>
	<!-- ROOT -->
	<root level="TRACE">
		<appender-ref ref="CONSOLE"/>
		<appender-ref ref="Application-ASYNCDEBUG"/>
		<appender-ref ref="Framework-ASYNCDEBUG"/>
		<appender-ref ref="Framework-ASYNCTRACE"/>
		
		
		<appender-ref ref="Application-ASYNCERROR"/>
		<appender-ref ref="Framework-ASYNCERROR"/>
		
		<appender-ref ref="Application-ASYNCINFO"/>
		<appender-ref  ref="Framework-ASYNCINFO"/>
	</root>
</configuration>